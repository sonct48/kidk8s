---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sonarqube-deployment
  namespace: kidangel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      securityContext:
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: sonarqube-app
        image: sonarqube:6.7.6-community 
        #image: sonct/sonar:latest
        #command: ["sh", "-c", "/opt/sonarqube/bin/run.sh"]
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
          name: sonarqube-http
        resources:
          requests:
            cpu: 100m
            memory: 2048Mi
          limits:
            cpu: 500m
        env:
        - name: sonar.jdbc.username
          value: sonar
        - name: sonar.jdbc.password
          valueFrom:
            secretKeyRef:
              name: sonarqube-postgres-secret
              key: password
        - name: sonar.jdbc.url
          value: jdbc:postgresql://sonarqube-postgres-db-service:5432/sonar
        volumeMounts:
        - name: sonarqube-data
          subPath: data/sonar/sonar-data
          #mountPath: /opt/sonarqube/data
          mountPath: /opt/sonarqube/data
        - name: sonarqube-extensions
          subPath: data/sonar/sonar-extensions
          mountPath: /opt/sonarqube/extensions
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          #claimName: share-premium-data-disk
          claimName: sonarqube-disk-data
      - name: sonarqube-extensions
        persistentVolumeClaim:
#          #claimName: share-standard-data-disk
          claimName: sonarqube-disk-extensions
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-service
  namespace: kidangel
spec:
  ports:
  - port: 9000
  selector:
    app: sonarqube
